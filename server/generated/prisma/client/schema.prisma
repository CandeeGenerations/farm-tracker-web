model Animal {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  parent   Animal? @relation("children", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  parentId String? @db.ObjectId

  children Animal[] @relation("children")

  owner       String
  name        String
  species     String
  breed       String
  temperament String?
  tags        String[]

  deceased Boolean @default(false)
  sold     Boolean @default(false)

  birthDate    DateTime?
  deceasedDate DateTime?
  saleDate     DateTime?
}

model Expense {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  product   Product @relation(fields: [productId], references: [id])
  productId String  @db.ObjectId

  owner String
  item  String

  amount Float

  quantity Int

  purchaseDate DateTime
}

model Product {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  owner      String
  productKey String @unique
  name       String
  species    String
  unit       String

  expenses       Expense[]
  loggedProducts LoggedProduct[]
  sales          Sale[]
}

model LoggedProduct {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  product   Product @relation(fields: [productId], references: [id])
  productId String  @db.ObjectId

  owner   String
  species String?
  breed   String?

  quantity Float

  logDate DateTime
}

model Sale {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  product   Product @relation(fields: [productId], references: [id])
  productId String  @db.ObjectId

  owner        String
  customerName String?
  notes        String?

  amount Float

  quantity Int

  saleDate DateTime
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  output        = "../generated/prisma/client"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}
